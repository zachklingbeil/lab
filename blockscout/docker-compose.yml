services:
    frontend:
        image: ghcr.io/blockscout/frontend
        container_name: frontend
        pull_policy: always
        restart: always
        env_file:
            - ../envs/common-frontend.env
        networks:
            - timefactory
        expose:
            - 3000
    backend:
        image: ghcr.io/blockscout/blockscout
        container_name: backend
        pull_policy: always
        restart: always
        stop_grace_period: 5m
        command: sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
        env_file:
            - ../envs/common-blockscout.env
        networks:
            - timefactory
        expose:
            - 4000
        volumes:
            - blockscout:/app/logs/
            - blockscout:/app/dets/

    visualizer:
        container_name: visualizer
        image: ghcr.io/blockscout/visualizer
        pull_policy: always
        restart: always
        env_file:
            - ../envs/common-visualizer.env
        networks:
            - timefactory
        expose:
            - 8050

    sig-provider:
        container_name: sig-provider
        image: ghcr.io/blockscout/sig-provider
        pull_policy: always
        restart: always
        networks:
            - timefactory
        expose:
            - 8050

    stats:
        image: ghcr.io/blockscout/stats
        container_name: stats
        pull_policy: always
        restart: always
        env_file:
            - ../envs/common-stats.env
        depends_on:
            - backend
        networks:
            - timefactory
        expose:
            - 8050

    sc-verifier:
        image: ghcr.io/blockscout/smart-contract-verifier
        container_name: smart-contract-verifier
        pull_policy: always
        restart: always
        env_file:
            - ../envs/common-smart-contract-verifier.env
        networks:
            - timefactory
        expose:
            - 8050

    user-ops-indexer:
        image: ghcr.io/blockscout/user-ops-indexer
        container_name: user-ops-indexer
        pull_policy: always
        restart: always
        env_file:
            - ../envs/common-user-ops-indexer.env
        depends_on:
            - backend
        networks:
            - timefactory
        expose:
            - 8050

networks:
    timefactory:
        external: true
volumes:
    blockscout:
        external: true
